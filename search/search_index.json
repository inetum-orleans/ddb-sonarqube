{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DDB Sonarqube","text":"<p>This project is a ready to use Sonarqube instance for docker-devbox-ddb environments.</p>"},{"location":"#requirement","title":"Requirement","text":"<p>First and foremost, you need to have an environment where docker-devbox-ddb is installed.</p>"},{"location":"#configuration-for-linux-based-environment","title":"Configuration for Linux based environment","text":"<p>You will need to update some system variables, as follows:  <pre><code>sudo sed -i -e '/^\\(vm.max_map_count=\\).*/{s//\\1262144/;:a;n;ba;q}' -e '$avm.max_map_count=262144' /etc/sysctl.conf\n</code></pre></p> <p>As it is taken into account after a reboot, you can execute the following before rebooting: <pre><code>sudo sysctl -w vm.max_map_count=262144\n</code></pre> It will update the same configuration but local to your session.</p>"},{"location":"#installation","title":"Installation","text":"<p>First, you need to clone the repository of the project</p> <p>Then, you need to configure the project with ddb configuration. For more detail, please refer to docker-devbox-ddb  official documentation.</p> <p>To do so, you need to run the following command :  <pre><code>ddb configure\n</code></pre></p> <p>Now you can run the project: <pre><code>docker compose up -d\n</code></pre></p> <p>That's it! Sonarqube is now running in your environement with ddb!</p> <p>If you want to check the URL to access it, simply run <code>ddb info</code>.</p>"},{"location":"#default-plugins","title":"Default plugins","text":"<p>By default, the project contains the following plugins:</p> <ol> <li>dependency-check/dependency-check-sonar-plugin</li> <li>mc1arke/sonarqube-community-branch-plugin</li> <li>vaulttec/sonar-auth-oidc</li> </ol>"},{"location":"#configuration","title":"Configuration","text":"<p>Out of the box, Sonarqube will be accessible and work as expected with default installation.</p> <p>For some part of the application or for some plugins, you may want to update Sonarqube configuration.</p> <p>To do so, you just need to create a <code>ddb.local.yaml</code> in the project.  In this file, you will need to add configuration as follows:  <pre><code>sonarqube:\n  config:\n    \"&lt;config-key&gt;\": \"&lt;config-value&gt;\"\n</code></pre></p> <p>For each config key, you will need to add a line in the file. For instance, if you want to enable the OIDC plugin : <pre><code>sonarqube:\n  config:\n    \"sonar.auth.oidc.enabled\": true\n</code></pre></p> <p>Once everything is configure as wanted, just run <code>ddb configure</code> and restart your containers using <code>docker compose down</code> and <code>docker compose up -d</code> </p>"}]}